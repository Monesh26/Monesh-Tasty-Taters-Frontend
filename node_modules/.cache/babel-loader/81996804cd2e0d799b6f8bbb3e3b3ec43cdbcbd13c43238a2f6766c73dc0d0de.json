{"ast":null,"code":"import axios from 'axios';\n// const LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = 'http://127.0.0.1:8000';\n}\n// baseURL = 'https://backend-tt.herokuapp.com/';\n// const api = axios.create({\n//     baseURL: baseURL,\n//     headers: {\n//         'Content-Type': 'application/json'\n//     }\n// });\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n// api.interceptors.request.use(\n//     config => {\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n//         }\n\n//         return config;\n//     },\n//     err => {\n//         console.error(err);\n//     }\n// );\n\nexport default class API {\n  constructor() {\n    this.getPosts = params => {\n      return api.get('/posts/', {\n        params\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.addPost = postBody => {\n      const formData = new FormData();\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n      return api.post('/posts/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.deletePost = id => {\n      return api.delete(`/posts/delete/${id}/`).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.getItems = async category => {\n      let url = '/items/';\n      if (category) {\n        url += '?category=' + category;\n      }\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n    this.getReviews = async item_id => {\n      let url = '/reviews?item_id=' + item_id;\n      const reviews = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return reviews;\n    };\n    this.writeReview = async (item_id, name, body, like_count) => {\n      const formData = new FormData();\n      formData.append(\"item\", item_id);\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"like_count\", like_count);\n      const savedReview = await api.post(\"/reviews/add\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedReview;\n    };\n  }\n}","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","API","getPosts","params","api","get","then","response","data","catch","error","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getItems","category","url","items","getReviews","item_id","reviews","writeReview","name","body","like_count","savedReview"],"sources":["/Users/techi.s./Desktop/Tasty-Taters/Frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\n// const LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n    baseURL = 'http://127.0.0.1:8000';\n}\n// baseURL = 'https://backend-tt.herokuapp.com/';\n// const api = axios.create({\n//     baseURL: baseURL,\n//     headers: {\n//         'Content-Type': 'application/json'\n//     }\n// });\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n// api.interceptors.request.use(\n//     config => {\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n//         }\n\n//         return config;\n//     },\n//     err => {\n//         console.error(err);\n//     }\n// );\n\nexport default class API {\n    //////////// POST/////////////////\n    getPosts = params => {\n        return api\n            .get('/posts/', { params })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n    };\n    addPost = postBody => {\n        const formData = new FormData();\n\n        for (const key in postBody) {\n            formData.append(key, postBody[key]);\n        }\n\n        return api\n            .post('/posts/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n    };\n    deletePost = id => {\n        return api.delete(`/posts/delete/${id}/`).catch(error => {\n            throw new Error(error);\n        });\n    };\n    ///////////////ITEM//////////////\n\n    getItems = async category => {\n        let url = '/items/';\n        if (category) {\n            url += '?category=' + category;\n        }\n        const items = await api\n            .get(url)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return items;\n    };\n    ///////////////REVIEW//////////////\n\n    getReviews = async item_id => {\n        let url = '/reviews?item_id=' + item_id;\n        const reviews = await api\n            .get(url)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return reviews;\n    };\n    ///////////////WRITE REVIEW//////////////\n\n    writeReview = async (item_id, name, body, like_count) => {\n        const formData = new FormData();\n        formData.append(\"item\", item_id);\n        formData.append(\"name\", name);\n        formData.append(\"body\", body);\n        formData.append(\"like_count\", like_count);\n        const savedReview = await api\n          .post(\"/reviews/add\", formData)\n          .then((response) => {\n            return response.data;\n          })\n          .catch((error) => {\n            throw new Error(error);\n          });\n        return savedReview;\n      };\n    }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}